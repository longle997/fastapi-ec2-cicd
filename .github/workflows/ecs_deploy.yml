name: Deploy to ECS with Docker Hub image

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-southeast-2
  ECS_SERVICE: Fastapi-task-ecs-ec2-service-h82aeda2
  ECS_CLUSTER: Fastapi-ECS-EC2
  ECS_TASK_DEFINITION: task_definition.json
  CONTAINER_NAME: fastapi-container-1
  DOCKER_IMAGE: longle997/test_project-fastapi-app

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      run: |
        # Build with commit SHA tag for versioning
        docker build -t ${{ env.DOCKER_IMAGE }}:${{ github.sha }} .
        docker build -t ${{ env.DOCKER_IMAGE }}:latest .
        
        # Push both tags
        docker push ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
        docker push ${{ env.DOCKER_IMAGE }}:latest

    - name: Fill in the new image in the ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        wait-for-service-stability: true

    - name: Deployment Status
      run: |
        echo "üöÄ Deployment completed successfully!"
        echo "üì¶ Image: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}"
        echo "üè∑Ô∏è  Service: ${{ env.ECS_SERVICE }}"
        echo "üéØ Cluster: ${{ env.ECS_CLUSTER }}"